&FORTIN
 NX=        256,
 NLEVS=          1,
 RR=          2,
 SUBCYCLING=F,
 NSTEPS=        200,
 STOP_TIME=  10000.000000000000     ,
 PROBLO=  0.0000000000000000     ,
 PROBHI=  1.2000000000000000     ,
 CHKFILE="null            ",
 PLOT_INT=          1,
 CHK_INT=       1000,
 INIT_SHRINK= 0.10000000000000001     ,
 FLAME_OFFSET= -2.3999999999999999     ,
 FANCY_PREDICTOR=          0,
 DPDT_FACTOR=  1.0000000000000000     ,
 PATM=  1.0000000000000000     ,
 COEF_AVG_HARM=          0,
 INITIAL_S_TYPE=          1,
 RECOMPUTE_S=          0,
 PROBTYPE=          1,
 MISDC_ITERMAX=          2,
 DO_INITIAL_PROJECTION=          1,
 NUM_DIVU_ITERS=          3,
 NUM_INIT_ITERS=          2,
 FIXED_DT=  1.9999999999999999E-007,
 USE_STRANG=F,
 V_IN=  0.0000000000000000     ,
 LIM_RXNS=          0,
 LEEQ1=          0,
 TRANFILE="tran.asc.chem-H                                                                                                                                                                                                                                                 ",
 TMIN_TRANS=  0.0000000000000000     ,
 PR= 0.69999999999999996     ,
 SC= 0.69999999999999996     ,
 MAX_VODE_SUBCYCLES=      15000,
 MIN_VODE_TIMESTEP=  9.9999996826552254E-020,
 DIVU_CEILING_FLAG=          1,
 DIVU_DT_FACTOR= 0.40000000000000002     ,
 RHO_DIVU_CEILING=  9.9999997764825821E-003,
 UNLIM=          0,
 /
 ...writing data to rht99999
 initialVelocityProject: 
 ...writing data to rht99998
  
  
 ...doing num_divu_iters =            3
  
  
  ...doing divu_iter number           1  dt=   1.9999999999999999E-007
 divu_iters velocity Project: 
  ...doing divu_iter number           2  dt=   1.9999999999999999E-007
 divu_iters velocity Project: 
  ...doing divu_iter number           3  dt=   1.9999999999999999E-007
 divu_iters velocity Project: 
 ...writing data to rht99997
  
 ...doing num_init_iters =            2
  
  
 INITIAL PRESSURE ITERATION            1
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
  
 INITIAL PRESSURE ITERATION            2
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00000
  
  
 COMPLETED INITIAL ITERATIONS
  
 START ADVANCING THE SOLUTION 
  
 ...writing data to rht00001
 ...writing checkpoint chk00001

Advancing: starting time = 0.000000000E+00 with dt = 0.200000000E-06
 STEP =            1
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00001

Advancing: starting time = 0.200000000E-06 with dt = 0.200000000E-06
 STEP =            2
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00002

Advancing: starting time = 0.400000000E-06 with dt = 0.200000000E-06
 STEP =            3
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00003

Advancing: starting time = 0.600000000E-06 with dt = 0.200000000E-06
 STEP =            4
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00004

Advancing: starting time = 0.800000000E-06 with dt = 0.200000000E-06
 STEP =            5
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00005

Advancing: starting time = 0.100000000E-05 with dt = 0.200000000E-06
 STEP =            6
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00006

Advancing: starting time = 0.120000000E-05 with dt = 0.200000000E-06
 STEP =            7
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00007

Advancing: starting time = 0.140000000E-05 with dt = 0.200000000E-06
 STEP =            8
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00008

Advancing: starting time = 0.160000000E-05 with dt = 0.200000000E-06
 STEP =            9
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00009

Advancing: starting time = 0.180000000E-05 with dt = 0.200000000E-06
 STEP =           10
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00010

Advancing: starting time = 0.200000000E-05 with dt = 0.200000000E-06
 STEP =           11
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00011

Advancing: starting time = 0.220000000E-05 with dt = 0.200000000E-06
 STEP =           12
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00012

Advancing: starting time = 0.240000000E-05 with dt = 0.200000000E-06
 STEP =           13
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00013

Advancing: starting time = 0.260000000E-05 with dt = 0.200000000E-06
 STEP =           14
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00014

Advancing: starting time = 0.280000000E-05 with dt = 0.200000000E-06
 STEP =           15
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00015

Advancing: starting time = 0.300000000E-05 with dt = 0.200000000E-06
 STEP =           16
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00016

Advancing: starting time = 0.320000000E-05 with dt = 0.200000000E-06
 STEP =           17
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00017

Advancing: starting time = 0.340000000E-05 with dt = 0.200000000E-06
 STEP =           18
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00018

Advancing: starting time = 0.360000000E-05 with dt = 0.200000000E-06
 STEP =           19
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00019

Advancing: starting time = 0.380000000E-05 with dt = 0.200000000E-06
 STEP =           20
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00020

Advancing: starting time = 0.400000000E-05 with dt = 0.200000000E-06
 STEP =           21
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00021

Advancing: starting time = 0.420000000E-05 with dt = 0.200000000E-06
 STEP =           22
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00022

Advancing: starting time = 0.440000000E-05 with dt = 0.200000000E-06
 STEP =           23
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00023

Advancing: starting time = 0.460000000E-05 with dt = 0.200000000E-06
 STEP =           24
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00024

Advancing: starting time = 0.480000000E-05 with dt = 0.200000000E-06
 STEP =           25
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00025

Advancing: starting time = 0.500000000E-05 with dt = 0.200000000E-06
 STEP =           26
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00026

Advancing: starting time = 0.520000000E-05 with dt = 0.200000000E-06
 STEP =           27
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00027

Advancing: starting time = 0.540000000E-05 with dt = 0.200000000E-06
 STEP =           28
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00028

Advancing: starting time = 0.560000000E-05 with dt = 0.200000000E-06
 STEP =           29
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00029

Advancing: starting time = 0.580000000E-05 with dt = 0.200000000E-06
 STEP =           30
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00030

Advancing: starting time = 0.600000000E-05 with dt = 0.200000000E-06
 STEP =           31
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00031

Advancing: starting time = 0.620000000E-05 with dt = 0.200000000E-06
 STEP =           32
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00032

Advancing: starting time = 0.640000000E-05 with dt = 0.200000000E-06
 STEP =           33
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00033

Advancing: starting time = 0.660000000E-05 with dt = 0.200000000E-06
 STEP =           34
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00034

Advancing: starting time = 0.680000000E-05 with dt = 0.200000000E-06
 STEP =           35
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00035

Advancing: starting time = 0.700000000E-05 with dt = 0.200000000E-06
 STEP =           36
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00036

Advancing: starting time = 0.720000000E-05 with dt = 0.200000000E-06
 STEP =           37
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00037

Advancing: starting time = 0.740000000E-05 with dt = 0.200000000E-06
 STEP =           38
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00038

Advancing: starting time = 0.760000000E-05 with dt = 0.200000000E-06
 STEP =           39
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00039

Advancing: starting time = 0.780000000E-05 with dt = 0.200000000E-06
 STEP =           40
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00040

Advancing: starting time = 0.800000000E-05 with dt = 0.200000000E-06
 STEP =           41
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00041

Advancing: starting time = 0.820000000E-05 with dt = 0.200000000E-06
 STEP =           42
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00042

Advancing: starting time = 0.840000000E-05 with dt = 0.200000000E-06
 STEP =           43
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00043

Advancing: starting time = 0.860000000E-05 with dt = 0.200000000E-06
 STEP =           44
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00044

Advancing: starting time = 0.880000000E-05 with dt = 0.200000000E-06
 STEP =           45
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00045

Advancing: starting time = 0.900000000E-05 with dt = 0.200000000E-06
 STEP =           46
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00046

Advancing: starting time = 0.920000000E-05 with dt = 0.200000000E-06
 STEP =           47
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00047

Advancing: starting time = 0.940000000E-05 with dt = 0.200000000E-06
 STEP =           48
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00048

Advancing: starting time = 0.960000000E-05 with dt = 0.200000000E-06
 STEP =           49
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00049

Advancing: starting time = 0.980000000E-05 with dt = 0.200000000E-06
 STEP =           50
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00050

Advancing: starting time = 0.100000000E-04 with dt = 0.200000000E-06
 STEP =           51
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00051

Advancing: starting time = 0.102000000E-04 with dt = 0.200000000E-06
 STEP =           52
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00052

Advancing: starting time = 0.104000000E-04 with dt = 0.200000000E-06
 STEP =           53
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00053

Advancing: starting time = 0.106000000E-04 with dt = 0.200000000E-06
 STEP =           54
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00054

Advancing: starting time = 0.108000000E-04 with dt = 0.200000000E-06
 STEP =           55
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00055

Advancing: starting time = 0.110000000E-04 with dt = 0.200000000E-06
 STEP =           56
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00056

Advancing: starting time = 0.112000000E-04 with dt = 0.200000000E-06
 STEP =           57
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00057

Advancing: starting time = 0.114000000E-04 with dt = 0.200000000E-06
 STEP =           58
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00058

Advancing: starting time = 0.116000000E-04 with dt = 0.200000000E-06
 STEP =           59
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00059

Advancing: starting time = 0.118000000E-04 with dt = 0.200000000E-06
 STEP =           60
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00060

Advancing: starting time = 0.120000000E-04 with dt = 0.200000000E-06
 STEP =           61
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00061

Advancing: starting time = 0.122000000E-04 with dt = 0.200000000E-06
 STEP =           62
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00062

Advancing: starting time = 0.124000000E-04 with dt = 0.200000000E-06
 STEP =           63
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00063

Advancing: starting time = 0.126000000E-04 with dt = 0.200000000E-06
 STEP =           64
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00064

Advancing: starting time = 0.128000000E-04 with dt = 0.200000000E-06
 STEP =           65
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00065

Advancing: starting time = 0.130000000E-04 with dt = 0.200000000E-06
 STEP =           66
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00066

Advancing: starting time = 0.132000000E-04 with dt = 0.200000000E-06
 STEP =           67
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00067

Advancing: starting time = 0.134000000E-04 with dt = 0.200000000E-06
 STEP =           68
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00068

Advancing: starting time = 0.136000000E-04 with dt = 0.200000000E-06
 STEP =           69
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00069

Advancing: starting time = 0.138000000E-04 with dt = 0.200000000E-06
 STEP =           70
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00070

Advancing: starting time = 0.140000000E-04 with dt = 0.200000000E-06
 STEP =           71
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00071

Advancing: starting time = 0.142000000E-04 with dt = 0.200000000E-06
 STEP =           72
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00072

Advancing: starting time = 0.144000000E-04 with dt = 0.200000000E-06
 STEP =           73
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00073

Advancing: starting time = 0.146000000E-04 with dt = 0.200000000E-06
 STEP =           74
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00074

Advancing: starting time = 0.148000000E-04 with dt = 0.200000000E-06
 STEP =           75
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00075

Advancing: starting time = 0.150000000E-04 with dt = 0.200000000E-06
 STEP =           76
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00076

Advancing: starting time = 0.152000000E-04 with dt = 0.200000000E-06
 STEP =           77
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00077

Advancing: starting time = 0.154000000E-04 with dt = 0.200000000E-06
 STEP =           78
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00078

Advancing: starting time = 0.156000000E-04 with dt = 0.200000000E-06
 STEP =           79
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00079

Advancing: starting time = 0.158000000E-04 with dt = 0.200000000E-06
 STEP =           80
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00080

Advancing: starting time = 0.160000000E-04 with dt = 0.200000000E-06
 STEP =           81
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00081

Advancing: starting time = 0.162000000E-04 with dt = 0.200000000E-06
 STEP =           82
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00082

Advancing: starting time = 0.164000000E-04 with dt = 0.200000000E-06
 STEP =           83
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00083

Advancing: starting time = 0.166000000E-04 with dt = 0.200000000E-06
 STEP =           84
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00084

Advancing: starting time = 0.168000000E-04 with dt = 0.200000000E-06
 STEP =           85
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00085

Advancing: starting time = 0.170000000E-04 with dt = 0.200000000E-06
 STEP =           86
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00086

Advancing: starting time = 0.172000000E-04 with dt = 0.200000000E-06
 STEP =           87
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00087

Advancing: starting time = 0.174000000E-04 with dt = 0.200000000E-06
 STEP =           88
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00088

Advancing: starting time = 0.176000000E-04 with dt = 0.200000000E-06
 STEP =           89
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00089

Advancing: starting time = 0.178000000E-04 with dt = 0.200000000E-06
 STEP =           90
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00090

Advancing: starting time = 0.180000000E-04 with dt = 0.200000000E-06
 STEP =           91
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00091

Advancing: starting time = 0.182000000E-04 with dt = 0.200000000E-06
 STEP =           92
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00092

Advancing: starting time = 0.184000000E-04 with dt = 0.200000000E-06
 STEP =           93
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00093

Advancing: starting time = 0.186000000E-04 with dt = 0.200000000E-06
 STEP =           94
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00094

Advancing: starting time = 0.188000000E-04 with dt = 0.200000000E-06
 STEP =           95
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00095

Advancing: starting time = 0.190000000E-04 with dt = 0.200000000E-06
 STEP =           96
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00096

Advancing: starting time = 0.192000000E-04 with dt = 0.200000000E-06
 STEP =           97
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00097

Advancing: starting time = 0.194000000E-04 with dt = 0.200000000E-06
 STEP =           98
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00098

Advancing: starting time = 0.196000000E-04 with dt = 0.200000000E-06
 STEP =           99
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00099

Advancing: starting time = 0.198000000E-04 with dt = 0.200000000E-06
 STEP =          100
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00100

Advancing: starting time = 0.200000000E-04 with dt = 0.200000000E-06
 STEP =          101
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00101

Advancing: starting time = 0.202000000E-04 with dt = 0.200000000E-06
 STEP =          102
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00102

Advancing: starting time = 0.204000000E-04 with dt = 0.200000000E-06
 STEP =          103
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00103

Advancing: starting time = 0.206000000E-04 with dt = 0.200000000E-06
 STEP =          104
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00104

Advancing: starting time = 0.208000000E-04 with dt = 0.200000000E-06
 STEP =          105
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00105

Advancing: starting time = 0.210000000E-04 with dt = 0.200000000E-06
 STEP =          106
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00106

Advancing: starting time = 0.212000000E-04 with dt = 0.200000000E-06
 STEP =          107
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00107

Advancing: starting time = 0.214000000E-04 with dt = 0.200000000E-06
 STEP =          108
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00108

Advancing: starting time = 0.216000000E-04 with dt = 0.200000000E-06
 STEP =          109
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00109

Advancing: starting time = 0.218000000E-04 with dt = 0.200000000E-06
 STEP =          110
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00110

Advancing: starting time = 0.220000000E-04 with dt = 0.200000000E-06
 STEP =          111
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00111

Advancing: starting time = 0.222000000E-04 with dt = 0.200000000E-06
 STEP =          112
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00112

Advancing: starting time = 0.224000000E-04 with dt = 0.200000000E-06
 STEP =          113
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00113

Advancing: starting time = 0.226000000E-04 with dt = 0.200000000E-06
 STEP =          114
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00114

Advancing: starting time = 0.228000000E-04 with dt = 0.200000000E-06
 STEP =          115
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00115

Advancing: starting time = 0.230000000E-04 with dt = 0.200000000E-06
 STEP =          116
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00116

Advancing: starting time = 0.232000000E-04 with dt = 0.200000000E-06
 STEP =          117
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00117

Advancing: starting time = 0.234000000E-04 with dt = 0.200000000E-06
 STEP =          118
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00118

Advancing: starting time = 0.236000000E-04 with dt = 0.200000000E-06
 STEP =          119
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00119

Advancing: starting time = 0.238000000E-04 with dt = 0.200000000E-06
 STEP =          120
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00120

Advancing: starting time = 0.240000000E-04 with dt = 0.200000000E-06
 STEP =          121
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00121

Advancing: starting time = 0.242000000E-04 with dt = 0.200000000E-06
 STEP =          122
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00122

Advancing: starting time = 0.244000000E-04 with dt = 0.200000000E-06
 STEP =          123
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00123

Advancing: starting time = 0.246000000E-04 with dt = 0.200000000E-06
 STEP =          124
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00124

Advancing: starting time = 0.248000000E-04 with dt = 0.200000000E-06
 STEP =          125
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00125

Advancing: starting time = 0.250000000E-04 with dt = 0.200000000E-06
 STEP =          126
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00126

Advancing: starting time = 0.252000000E-04 with dt = 0.200000000E-06
 STEP =          127
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00127

Advancing: starting time = 0.254000000E-04 with dt = 0.200000000E-06
 STEP =          128
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00128

Advancing: starting time = 0.256000000E-04 with dt = 0.200000000E-06
 STEP =          129
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00129

Advancing: starting time = 0.258000000E-04 with dt = 0.200000000E-06
 STEP =          130
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00130

Advancing: starting time = 0.260000000E-04 with dt = 0.200000000E-06
 STEP =          131
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00131

Advancing: starting time = 0.262000000E-04 with dt = 0.200000000E-06
 STEP =          132
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00132

Advancing: starting time = 0.264000000E-04 with dt = 0.200000000E-06
 STEP =          133
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00133

Advancing: starting time = 0.266000000E-04 with dt = 0.200000000E-06
 STEP =          134
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00134

Advancing: starting time = 0.268000000E-04 with dt = 0.200000000E-06
 STEP =          135
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00135

Advancing: starting time = 0.270000000E-04 with dt = 0.200000000E-06
 STEP =          136
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00136

Advancing: starting time = 0.272000000E-04 with dt = 0.200000000E-06
 STEP =          137
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00137

Advancing: starting time = 0.274000000E-04 with dt = 0.200000000E-06
 STEP =          138
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00138

Advancing: starting time = 0.276000000E-04 with dt = 0.200000000E-06
 STEP =          139
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00139

Advancing: starting time = 0.278000000E-04 with dt = 0.200000000E-06
 STEP =          140
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00140

Advancing: starting time = 0.280000000E-04 with dt = 0.200000000E-06
 STEP =          141
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00141

Advancing: starting time = 0.282000000E-04 with dt = 0.200000000E-06
 STEP =          142
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00142

Advancing: starting time = 0.284000000E-04 with dt = 0.200000000E-06
 STEP =          143
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00143

Advancing: starting time = 0.286000000E-04 with dt = 0.200000000E-06
 STEP =          144
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00144

Advancing: starting time = 0.288000000E-04 with dt = 0.200000000E-06
 STEP =          145
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00145

Advancing: starting time = 0.290000000E-04 with dt = 0.200000000E-06
 STEP =          146
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00146

Advancing: starting time = 0.292000000E-04 with dt = 0.200000000E-06
 STEP =          147
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00147

Advancing: starting time = 0.294000000E-04 with dt = 0.200000000E-06
 STEP =          148
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00148

Advancing: starting time = 0.296000000E-04 with dt = 0.200000000E-06
 STEP =          149
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00149

Advancing: starting time = 0.298000000E-04 with dt = 0.200000000E-06
 STEP =          150
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00150

Advancing: starting time = 0.300000000E-04 with dt = 0.200000000E-06
 STEP =          151
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00151

Advancing: starting time = 0.302000000E-04 with dt = 0.200000000E-06
 STEP =          152
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00152

Advancing: starting time = 0.304000000E-04 with dt = 0.200000000E-06
 STEP =          153
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00153

Advancing: starting time = 0.306000000E-04 with dt = 0.200000000E-06
 STEP =          154
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00154

Advancing: starting time = 0.308000000E-04 with dt = 0.200000000E-06
 STEP =          155
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00155

Advancing: starting time = 0.310000000E-04 with dt = 0.200000000E-06
 STEP =          156
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00156

Advancing: starting time = 0.312000000E-04 with dt = 0.200000000E-06
 STEP =          157
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00157

Advancing: starting time = 0.314000000E-04 with dt = 0.200000000E-06
 STEP =          158
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00158

Advancing: starting time = 0.316000000E-04 with dt = 0.200000000E-06
 STEP =          159
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00159

Advancing: starting time = 0.318000000E-04 with dt = 0.200000000E-06
 STEP =          160
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00160

Advancing: starting time = 0.320000000E-04 with dt = 0.200000000E-06
 STEP =          161
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00161

Advancing: starting time = 0.322000000E-04 with dt = 0.200000000E-06
 STEP =          162
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00162

Advancing: starting time = 0.324000000E-04 with dt = 0.200000000E-06
 STEP =          163
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00163

Advancing: starting time = 0.326000000E-04 with dt = 0.200000000E-06
 STEP =          164
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00164

Advancing: starting time = 0.328000000E-04 with dt = 0.200000000E-06
 STEP =          165
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00165

Advancing: starting time = 0.330000000E-04 with dt = 0.200000000E-06
 STEP =          166
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00166

Advancing: starting time = 0.332000000E-04 with dt = 0.200000000E-06
 STEP =          167
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00167

Advancing: starting time = 0.334000000E-04 with dt = 0.200000000E-06
 STEP =          168
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00168

Advancing: starting time = 0.336000000E-04 with dt = 0.200000000E-06
 STEP =          169
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00169

Advancing: starting time = 0.338000000E-04 with dt = 0.200000000E-06
 STEP =          170
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00170

Advancing: starting time = 0.340000000E-04 with dt = 0.200000000E-06
 STEP =          171
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00171

Advancing: starting time = 0.342000000E-04 with dt = 0.200000000E-06
 STEP =          172
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00172

Advancing: starting time = 0.344000000E-04 with dt = 0.200000000E-06
 STEP =          173
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00173

Advancing: starting time = 0.346000000E-04 with dt = 0.200000000E-06
 STEP =          174
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00174

Advancing: starting time = 0.348000000E-04 with dt = 0.200000000E-06
 STEP =          175
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00175

Advancing: starting time = 0.350000000E-04 with dt = 0.200000000E-06
 STEP =          176
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00176

Advancing: starting time = 0.352000000E-04 with dt = 0.200000000E-06
 STEP =          177
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00177

Advancing: starting time = 0.354000000E-04 with dt = 0.200000000E-06
 STEP =          178
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00178

Advancing: starting time = 0.356000000E-04 with dt = 0.200000000E-06
 STEP =          179
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00179

Advancing: starting time = 0.358000000E-04 with dt = 0.200000000E-06
 STEP =          180
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00180

Advancing: starting time = 0.360000000E-04 with dt = 0.200000000E-06
 STEP =          181
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00181

Advancing: starting time = 0.362000000E-04 with dt = 0.200000000E-06
 STEP =          182
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00182

Advancing: starting time = 0.364000000E-04 with dt = 0.200000000E-06
 STEP =          183
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00183

Advancing: starting time = 0.366000000E-04 with dt = 0.200000000E-06
 STEP =          184
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00184

Advancing: starting time = 0.368000000E-04 with dt = 0.200000000E-06
 STEP =          185
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00185

Advancing: starting time = 0.370000000E-04 with dt = 0.200000000E-06
 STEP =          186
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00186

Advancing: starting time = 0.372000000E-04 with dt = 0.200000000E-06
 STEP =          187
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00187

Advancing: starting time = 0.374000000E-04 with dt = 0.200000000E-06
 STEP =          188
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00188

Advancing: starting time = 0.376000000E-04 with dt = 0.200000000E-06
 STEP =          189
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00189

Advancing: starting time = 0.378000000E-04 with dt = 0.200000000E-06
 STEP =          190
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00190

Advancing: starting time = 0.380000000E-04 with dt = 0.200000000E-06
 STEP =          191
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00191

Advancing: starting time = 0.382000000E-04 with dt = 0.200000000E-06
 STEP =          192
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00192

Advancing: starting time = 0.384000000E-04 with dt = 0.200000000E-06
 STEP =          193
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00193

Advancing: starting time = 0.386000000E-04 with dt = 0.200000000E-06
 STEP =          194
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00194

Advancing: starting time = 0.388000000E-04 with dt = 0.200000000E-06
 STEP =          195
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00195

Advancing: starting time = 0.390000000E-04 with dt = 0.200000000E-06
 STEP =          196
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00196

Advancing: starting time = 0.392000000E-04 with dt = 0.200000000E-06
 STEP =          197
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00197

Advancing: starting time = 0.394000000E-04 with dt = 0.200000000E-06
 STEP =          198
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00198

Advancing: starting time = 0.396000000E-04 with dt = 0.200000000E-06
 STEP =          199
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00199

Advancing: starting time = 0.398000000E-04 with dt = 0.200000000E-06
 STEP =          200
 advance: at start of time step
 ... predict edge velocities
 ... mac_projection
 ... creating the diffusive terms with old data
 ... doing SDC iter            1
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... doing SDC iter            2
 ... compute lagged diff_new, D(U^{n+1,k-1})
 ... updating S^{n+1} and macvel_new
     using fancy delta_chi
 ... mac_projection
 ... update rho
 ... do correction diffusion solve for species
 ... do correction diffusion solve for rhoh
 ... react with const sources
 ... update velocities
 ...nodal projection...
 ...writing data to rht00200
 ...writing checkpoint chk00200
  
 COMPLETED SUCCESSFULLY
  
