***************
* inputs.2dcontrol_sdc
***************
-Same as inputs.2dcontrol, but amr.max_level=0 and ns.do_sdc=1.

***************
* cdwrk.H
***************
-Added c_0(maxspec+1) to the newly created sdc_interp_coef common block.


***************
* ChemDriver_2D.F
***************
-Copied subroutine FORT_CONPSOLV to FORT_CONPSOLV_SDC.
  -Changed the DVODE call to use conpFY_sdc rather than conpFY
  -Set up sdc_func interface to set RHS
  -Change inputs to reflect how we are updated rhoY and rhoh instead of Y and T

***************
* ChemDriver.cpp
***************
-Copied ChemDriver::solveTransient to ChemDriver::solveTransient_sdc
  -Modified to call FORT_CONPSOLV_SDC rather than FORT_CONPSOLV
    -Pass in set_c_0_simple_sdc interface for RHS.
    -Change inputs to reflect how we are updated rhoY and rhoh instead of Y and T

***************
* ChemDriver_F.F
***************
-Copied subroutine conpFY to conpFY_sdc.
  -Modified to compute ZP for rhoh and rhoY with reaction term and 
   piecewise-constant advection-diffusion term, c_0.
-Created subroutine set_c_0_simple_sdc, which sets c_0 for the VODE solve.

***************
* ChemDriver_F.H
***************
-Added headers for FORT_CONPSOLV_SDC and set_c_0_simple_sdc

***************
* ChemDriver.H
***************
-Added header for ChemDriver::solveTransient_sdc


***************
* HeatTransfer.cpp
***************
-Create advance_setup_sdc
-Make do_sdc default to 0 and then read it in from the inputs file.
-Added some commented out code testing out averating Ydot from both Strang calls
 to compute divu at the new time.  Causes seg faults if you uncomment.
-Created advance_sdc, which for now is a copy of advance.

***************
* HeatTransfer.H
***************
-Added header for advance_setup_sdc
-Added static int do_sdc.
-Added header for advance_sdc
