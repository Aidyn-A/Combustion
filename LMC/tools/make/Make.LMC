
EBASE = LMC

BOXLIB_HOME = $(BOXLIB_DIR)
include $(BOXLIB_DIR)/Tools/C_mk/Make.defs 

fincludes=$(includes)

# LMC
ifeq ($(USE_LMC_SDC), TRUE)
  Bdirs += $(COMBUSTION_DIR)/LMC/src_sdc
endif
Bdirs += $(COMBUSTION_DIR)/LMC/src

# Chemistry
Bdirs += $(COMBUSTION_DIR)/Chemistry/src

#
# Tells IAMR not to include the following: NS_error.cpp NS_setup.cpp NSBld.cpp
#
SKIP_NS_SPECIFIC_CODE = TRUE

# IAMR
Bdirs += $(IAMR_DIR)/Source
Bdirs += $(IAMR_DIR)/Source/Src_$(DIM)d
Bdirs += $(IAMR_DIR)/Source/InflowForce

# BoxLib 
Bdirs   += $(BOXLIB_DIR)/Src/C_BaseLib
Bdirs   += $(BOXLIB_DIR)/Src/C_AMRLib
Bdirs   += $(BOXLIB_DIR)/Src/C_BoundaryLib
Bdirs   += $(BOXLIB_DIR)/Src/LinearSolvers/C_CellMG
Bdirs   += $(BOXLIB_DIR)/Src/LinearSolvers/C_TensorMG

Bpack	+= $(foreach dir, $(Bdirs), $(dir)/Make.package)
Blocs	+= $(foreach dir, $(Bdirs), $(dir))

include $(Bpack) 
INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

include $(BOXLIB_DIR)/Src/LinearSolvers/C_to_F_MG/Make.package
INCLUDE_LOCATIONS += $(BOXLIB_DIR)/Src/LinearSolvers/C_to_F_MG
VPATH_LOCATIONS   += $(BOXLIB_DIR)/Src/LinearSolvers/C_to_F_MG
 
include $(BOXLIB_DIR)/Src/LinearSolvers/F_MG/FParallelMG.mak
INCLUDE_LOCATIONS += $(BOXLIB_DIR)/Src/LinearSolvers/F_MG
VPATH_LOCATIONS   += $(BOXLIB_DIR)/Src/LinearSolvers/F_MG

include $(BOXLIB_HOME)/Src/F_BaseLib/FParallelMG.mak
INCLUDE_LOCATIONS += $(BOXLIB_DIR)/Src/F_BaseLib
VPATH_LOCATIONS   += $(BOXLIB_DIR)/Src/F_BaseLib

# Hack in some LMC stuff

ifeq ($(USE_FLCTS), TRUE)
  DEFINES += -DBL_DO_FLCT
  include $(COMBUSTION_DIR)/LMC/tools/make/flucts.mk
endif

ifeq ($(USE_SWIRL_DATA), TRUE)
  fEXE_sources += vswirl.f
  DEFINES += -DSWIRL_DATA
endif

ifeq ($(USE_VELOCITY), TRUE)
  AMRVIS_DIR = $(BOXLIB_HOME)/Src/Extern/amrdata
  include $(COMBUSTION_DIR)/LMC/tools/make/AmrData.mk
  INCLUDE_LOCATIONS += $(AMRVIS_DIR)
  VPATH_LOCATIONS   += $(AMRVIS_DIR)
  DEFINES += -DBL_NOLINEVALUES -DBL_USE_VELOCITY -DBL_PARALLEL_IO
endif

ifeq ($(USE_NEWMECH), TRUE)
  AMRVIS_DIR = $(BOXLIB_HOME)/Src/Extern/amrdata
  include $(COMBUSTION_DIR)/LMC/tools/make/AmrData.mk
  INCLUDE_LOCATIONS += $(AMRVIS_DIR)
  VPATH_LOCATIONS   += $(AMRVIS_DIR)
  DEFINES += -DBL_NOLINEVALUES -DBL_USE_NEWMECH -DBL_PARALLEL_IO
endif

ifeq ($(CHEMISTRY_MODEL), GLARSKEL)
  cEXE_sources += glarSkel.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/glar/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/glar
endif
ifeq ($(CHEMISTRY_MODEL), DRM19)
  cEXE_sources += drm19.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/gri/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/gri
endif
ifeq ($(CHEMISTRY_MODEL), CHEMH)
  cEXE_sources += chem-H.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/chem-H/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/chem-H
endif
ifeq ($(CHEMISTRY_MODEL), GRI30)
  cEXE_sources += grimech30.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/gri/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/gri
endif
ifeq ($(CHEMISTRY_MODEL), LIDRYER)
  cEXE_sources += LiDryer.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/LiDryer/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/LiDryer
endif
ifeq ($(CHEMISTRY_MODEL), LIDRYERMOD)
  cEXE_sources += LiDryerMOD.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/LiDryer/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/LiDryer
endif
ifeq ($(CHEMISTRY_MODEL), LUDME)
  cEXE_sources += LuDME.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/Lu/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/Lu
endif
ifeq ($(CHEMISTRY_MODEL), DODECANE_LU)
  cEXE_sources += dodecane_lu.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/dodecane_lu/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/dodecane_lu
endif
ifeq ($(CHEMISTRY_MODEL), DODECANEZHAO)
  cEXE_sources += dodecane_zhao_1.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/dodecane_zhao_1/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/dodecane_zhao_1
endif
ifeq ($(CHEMISTRY_MODEL), WANGDODECANE)
  cEXE_sources += dodecane_wang.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/dodecane_wang/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/dodecane_wang
endif
ifeq ($(CHEMISTRY_MODEL), ZHAODODECANE)
  cEXE_sources += dodecane_zhao_1.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/dodecane_zhao_1/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/dodecane_zhao_1
endif
ifeq ($(CHEMISTRY_MODEL), ALZETA)
  cEXE_sources += alzeta.c
  vpath %.f   $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/Alzeta/PMFs
  vpath %.c $(VPATH_LOCATIONS) $(COMBUSTION_DIR)/Chemistry/data/Alzeta
endif

# Enable time-dependent turbulence forcing term
ifeq ($(USE_TDEPFORCING), TRUE)
  ifeq ($(DIM), 3)
    DEFINES += -DGENGETFORCE
    DEFINES += -DDO_LMC_FORCE
  endif
endif

DEFINES += -DCG_USE_OLD_CONVERGENCE_CRITERIA

VPATH_LOCATIONS   += . $(Blocs) $(AMRVIS_DIR)
INCLUDE_LOCATIONS += . $(Blocs) $(AMRVIS_DIR)

ifeq ($(USE_BGL),TRUE)
  MACHINE=BGL
  CXX=mpicxx.ibm
  FC=blrts_xlf
  fC=blrts_xlf
  CPPFLAGS+= -DMPICH_SKIP_MPICXX
  LDFLAGS+=-L/bgl/BlueLight/ppcfloor/bglsys/lib
  LDFLAGS+=-L/opt/ibmcmp/xlf/bg/10.1/blrts_lib
  BL_MPI_LIBS=-lxlf90 -lxlfmath
  FORTLINK:=LOWERCASE
endif
 
ifeq ($(USE_HYPRE),TRUE)
  Bdirs   += HypreABec
  HYPRE_DIR=$(HOME)/amr/hypre
  INCLUDE_LOCATIONS += $(HYPRE_DIR)/include
  LIBRARY_LOCATIONS += $(HYPRE_DIR)/lib
  LIBRARIES += -lHYPRE_struct_ls -lHYPRE_struct_mv -lHYPRE_blas -lHYPRE_utilities
  DEFINES += -DMG_USE_HYPRE
endif

ifeq ($(USE_METIS),TRUE)
  Bdirs += metis-4.0/Lib
  DEFINES += -DBL_USE_METIS
endif

ifeq ($(REGRESSIONTEST),TRUE)
  DEFINES += -DREGRESSIONTEST
endif

all: $(executable)
	$(SILENT) $(RM) buildInfo.cpp
	@echo SUCCESS

$(executable):

# job_info support
CEXE_sources += buildInfo.cpp
CEXE_headers += $(BOXLIB_HOME)/Tools/C_scripts/buildInfo.H
INCLUDE_LOCATIONS +=  $(BOXLIB_HOME)/Tools/C_scripts

buildInfo.cpp:
	$(BOXLIB_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --boxlib_home "$(BOXLIB_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --MODULES "Chemistry=$(CHEMISTRY_MODEL)" \
          --GIT "$(COMBUSTION_DIR) $(BOXLIB_HOME) $(IAMR_DIR)" 


vpath %.c   $(VPATH_LOCATIONS)
vpath %.cpp $(VPATH_LOCATIONS)
vpath %.h   $(VPATH_LOCATIONS)
vpath %.H   $(VPATH_LOCATIONS)
vpath %.F   $(VPATH_LOCATIONS)
vpath %.f   $(VPATH_LOCATIONS)
vpath %.f90 $(VPATH_LOCATIONS)

include $(BOXLIB_DIR)/Tools/C_mk/Make.rules

clean::
	$(SILENT) $(RM) buildInfo.cpp
