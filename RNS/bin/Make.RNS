
EBASE = RNS

CHEMISTRY_DIR := ../../../Chemistry
USE_EGZ := TRUE
USE_WORK_SPACE_MODULE := TRUE

include $(BOXLIB_HOME)/Tools/C_mk/Make.defs

Bdirs 	:= src src/Src_$(DIM)d src/Src_nd src/EOS src/Burner

# Chemistry
Bdirs += $(CHEMISTRY_DIR)/src_common
Bdirs += $(CHEMISTRY_DIR)/src_f90

Bpack	+= $(foreach dir, $(Bdirs), $(TOP)/$(dir)/Make.package)
Blocs	+= $(foreach dir, $(Bdirs), $(TOP)/$(dir))

Pdirs 	:= C_BaseLib C_AMRLib C_BoundaryLib

Bpack	+= $(foreach dir, $(Pdirs), $(BOXLIB_HOME)/Src/$(dir)/Make.package)
Blocs	+= $(foreach dir, $(Pdirs), $(BOXLIB_HOME)/Src/$(dir))

MECHDIR = $(CHEMISTRY_DIR)/data
ifeq (${CHEMISTRY_MODEL}, CHEMH)
  cEXE_sources += chem-H.c
  vpath %.f $(VPATH_LOCATIONS) ${MECHDIR}/chem-H/PMFs
  vpath %.c $(VPATH_LOCATIONS) ${MECHDIR}/chem-H
else ifeq (${CHEMISTRY_MODEL}, LIDRYER)
  cEXE_sources += LiDryer.c
  vpath %.f $(VPATH_LOCATIONS) ${MECHDIR}/LiDryer/PMFs
  vpath %.c $(VPATH_LOCATIONS) ${MECHDIR}/LiDryer
else ifeq ($(CHEMISTRY_MODEL), DRM19)
  cEXE_sources += drm19.c
  vpath %.f $(VPATH_LOCATIONS) ${MECHDIR}/gri/PMFs
  vpath %.c $(VPATH_LOCATIONS) ${MECHDIR}/gri
else ifeq ($(CHEMISTRY_MODEL), GRI30)
  cEXE_sources += grimech30.c
  vpath %.f $(VPATH_LOCATIONS) ${MECHDIR}/gri/PMFs
  vpath %.c $(VPATH_LOCATIONS) ${MECHDIR}/gri
else ifeq (${CHEMISTRY_MODEL}, LUDME)
  cEXE_sources += LuDME.c
  vpath %.f $(VPATH_LOCATIONS) ${MECHDIR}/Lu/PMFs
  vpath %.c $(VPATH_LOCATIONS) ${MECHDIR}/Lu
else ifneq (${CHEMISTRY_MODEL}, NULL)
  $(error "Unknown CHEMISTRY_MODEL: $(CHEMISTRY_MODEL)")
endif

include $(Bpack)

INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)


all: $(executable) 
	$(SILENT) $(RM) buildInfo.cpp
	@echo SUCCESS


# job_info support
CEXE_sources += buildInfo.cpp
CEXE_headers += $(BOXLIB_HOME)/Tools/C_scripts/buildInfo.H
INCLUDE_LOCATIONS +=  $(BOXLIB_HOME)/Tools/C_scripts

buildInfo.cpp: $(BOXLIB_HOME)/Tools/C_scripts/make_build_info_cpp
	$(BOXLIB_HOME)/Tools/C_scripts/make_build_info_cpp "$(BOXLIB_HOME)" \
            "$(COMP)" "$(FCOMP)" \
            "AUX=$(CHEMISTRY_MODEL)" \
            "GIT=$(TOP)" "GIT=$(BOXLIB_HOME)" "GIT=$(SDCLIB_HOME)" 


vpath %.c   . $(VPATH_LOCATIONS)
vpath %.cpp . $(VPATH_LOCATIONS)
vpath %.h   . $(VPATH_LOCATIONS)
vpath %.H   . $(VPATH_LOCATIONS)
vpath %.F   . $(VPATH_LOCATIONS)
vpath %.f90 . $(VPATH_LOCATIONS)
vpath %.f   . $(VPATH_LOCATIONS)
vpath %.fi  . $(VPATH_LOCATIONS)


include $(BOXLIB_HOME)/Tools/C_mk/Make.rules

clean::
	$(SILENT) $(RM) buildInfo.cpp

#-----------------------------------------------------------------------------
# for debugging.  To see the value of a Makefile variable,
# e.g. Fmlocs, simply do "make print-Fmlocs".  This will
# print out the value.
print-%: ; @echo $* is $($*)

