
#ifdef USE_SDCLIB
#ifndef _SDCAMR_H_
#define _SDCAMR_H_

#define BEGIN_EXTERN_C extern "C" {
#define END_EXTERN_C   }

#include <MultiFab.H>
#include <Amr.H>
#include <sdc.h>

using namespace std;

/*
 * MultiFab encapsulation context for SDCLib.
 */

typedef struct {
  const BoxArray* ba;
  int       ncomp;
  int       ngrow;
} mf_encap;

/*
 * Multigrid SDC+AMR class.
 */

class SDCAmr : public Amr
{
public:

  int max_iters;                // maximum number of sdc iterations
  int max_trefs;                // maximum number of time refinements

  sdc_mg mg;
  vector<sdc_sweeper*> sweepers;
  vector<sdc_encap*>   encaps;

  SDCAmr();
  ~SDCAmr();

  sdc_encap* build_encap(int lev);
  void rebuild_mlsdc();

  virtual void timeStep(int  level,
                        Real time,
                        int  iteration,
                        int  niter,
                        Real stop_time);

  virtual void regrid (int  lbase,
		       Real time,
		       bool initial = false);

  // virtual void initialInit (Real strt_time, Real stop_time) {
  //   Amr::initialInit(strt_time, stop_time);
  //   //    rebuild_mlsdc();
  // }

};

#endif
#endif
