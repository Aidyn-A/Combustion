TOP = $(PBOXLIB_HOME)

EBASE     = CNSReact

include $(TOP)/mk/Make.defs

ifeq ($(USE_REACT), TRUE)
  DEFINES += -DREACTIONS
endif

ifeq ($(USE_DIFFUSION), TRUE)
  DEFINES += -DDIFFUSION
endif

include $(EOS_dir)/Make.package
include $(Network_dir)/Make.package

INCLUDE_LOCATIONS += $(EOS_dir) $(Network_dir)
VPATH_LOCATIONS   += $(EOS_dir) $(Network_dir)

ifeq ($(USE_REACT), TRUE)
VODE_dir    := $(FBOXLIB_HOME)/extern/VODE
include $(VODE_dir)/Make.package
INCLUDE_LOCATIONS += $(VODE_dir) 
VPATH_LOCATIONS   += $(VODE_dir) 
endif

# end EOS_dir and Network_dir section

ifeq ($(DIM), 1)
DEFINES += -DHAS_XGRAPH
include $(PBOXLIB_HOME)/plot1d/Make.package
INCLUDE_LOCATIONS += $(PBOXLIB_HOME)/plot1d
VPATH_LOCATIONS   += $(PBOXLIB_HOME)/plot1d
endif

# These set the directories in Parallel to be included

Bdirs 	:= CNSReact/Source CNSReact/Source/Src_$(DIM)d BoxLib amrlib bndrylib 

Bpack	+= $(foreach dir, $(Bdirs), $(TOP)/$(dir)/Make.package)
Blocs	+= $(foreach dir, $(Bdirs), $(TOP)/$(dir))

include $(Bpack)

INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

# end Parallel directories

include $(FBOXLIB_HOME)/extern/constants/Make.package
INCLUDE_LOCATIONS += $(FBOXLIB_HOME)/extern/constants
VPATH_LOCATIONS   += $(FBOXLIB_HOME)/extern/constants

USE_MG = TRUE
   
ifeq ($(USE_MG), TRUE)
  include $(PBOXLIB_HOME)/mglib/Make.package
  INCLUDE_LOCATIONS += $(PBOXLIB_HOME)/mglib
  VPATH_LOCATIONS   += $(PBOXLIB_HOME)/mglib

  include $(PBOXLIB_HOME)/MGT_Solver/Make.package
  INCLUDE_LOCATIONS += $(PBOXLIB_HOME)/MGT_Solver
  VPATH_LOCATIONS   += $(PBOXLIB_HOME)/MGT_Solver

  include $(FBOXLIB_HOME)/mg/source/FParallelMG.mak
  INCLUDE_LOCATIONS += $(FBOXLIB_HOME)/mg/source
  VPATH_LOCATIONS   += $(FBOXLIB_HOME)/mg/source

  INCLUDE_LOCATIONS += $(FBOXLIB_HOME)/extern/SPARSKIT
  VPATH_LOCATIONS   += $(FBOXLIB_HOME)/extern/SPARSKIT

  INCLUDE_LOCATIONS += $(FBOXLIB_HOME)/extern/LAPACK
  VPATH_LOCATIONS   += $(FBOXLIB_HOME)/extern/LAPACK

  include $(FBOXLIB_HOME)/extern/BLAS/Make.package
  INCLUDE_LOCATIONS += $(FBOXLIB_HOME)/extern/BLAS
  VPATH_LOCATIONS   += $(FBOXLIB_HOME)/extern/BLAS
else
  include $(FBOXLIB_HOME)/boxlib/FParallelMG.mak
endif

ifeq ($(USE_CHEM), TRUE)

  INCLUDE_LOCATIONS += $(PBOXLIB_HOME)/LMC
  VPATH_LOCATIONS   += $(PBOXLIB_HOME)/LMC

  ifeq ($(REACTION_MECHANISM),DRM19)
    CEXE_sources += drm19.cpp
  endif
  ifeq ($(REACTION_MECHANISM),GRI12)
    CEXE_sources += gri12.cpp
  endif
  ifeq ($(REACTION_MECHANISM),GRI30)
    CEXE_sources += gri30.cpp
    fEXE_sources += pmf_gri30_ch4_075.f
  endif
  ifeq ($(REACTION_MECHANISM),GRI30NON)
    CEXE_sources += gri30-noN.cpp
  endif
  ifeq ($(REACTION_MECHANISM),GRI30HNO)
    CEXE_sources += gri30_hno.cpp
  endif
  ifeq ($(REACTION_MECHANISM),GRI211HNO)
    CEXE_sources += gri211-hno.cpp
  endif
  ifeq ($(REACTION_MECHANISM),CHEMH)
    CEXE_sources += chem-H.cpp
  endif
  ifeq ($(REACTION_MECHANISM),INERT30)
    CEXE_sources += inert30.cpp
  endif
  ifeq ($(REACTION_MECHANISM),CH4-2STEP)
    CEXE_sources += chem-CH4-2step.cpp
  endif
  ifeq ($(REACTION_MECHANISM),PROPANE)
    CEXE_sources += propane.cpp
  endif

  CEXE_sources += ChemDriver.cpp
  CEXE_headers += ChemDriver.H
  FEXE_sources += ChemDriver_F.F ChemDriver_$(DIM)D.F
  FEXE_headers += ChemDriver_F.H cdwrk.H
  fEXE_sources += vode.f EGSlib.f EGini.f

endif

INCLUDE_LOCATIONS += $(FBOXLIB_HOME)/boxlib 
VPATH_LOCATIONS   += $(FBOXLIB_HOME)/boxlib 

vpath %.c   . $(VPATH_LOCATIONS)
vpath %.cpp . $(VPATH_LOCATIONS)
vpath %.h   . $(VPATH_LOCATIONS)
vpath %.H   . $(VPATH_LOCATIONS)
vpath %.F   . $(VPATH_LOCATIONS)
vpath %.f90 . $(VPATH_LOCATIONS)
vpath %.f   . $(VPATH_LOCATIONS)
vpath %.fi  . $(VPATH_LOCATIONS)

all: $(executable) 

include $(TOP)/mk/Make.rules
